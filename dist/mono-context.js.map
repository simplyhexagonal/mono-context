{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["// @ts-ignore\nimport { version } from '../package.json';\n\n// @ts-ignore\nexport { version } from '../package.json';\n\nexport interface MonoContextState {\n  counts: {[k: string]: number},\n  stateCreatedAt: Date,\n  stateUpdatedAt: Date,\n  [k: string]: any,\n}\n\nexport default class MonoContext {\n  private static instance: MonoContext;\n\n  private static _stateCreatedAt: Date = new Date();\n  private static _stateUpdatedAt: Date = new Date();\n  private static _counts: {[k: string]: number} = {};\n  private static _state: {[k: string]: any} = {};\n\n  static version = version;\n\n  static _warningMessage = 'WARNING: refusing to override \"PROPERTY\" property in MonoContext state';\n\n  static count = (key: string): number => {\n    if (!MonoContext._counts[key]) {\n      MonoContext._counts[key] = 0;\n    }\n\n    MonoContext._counts[key] += 1;\n\n    return MonoContext._counts[key];\n  };\n\n  static getCount = (key: string): number => MonoContext._counts[key] || 0;\n\n  static resetCount = (key: string) => {\n    if (MonoContext._counts[key]) {\n      MonoContext._counts[key] = 0;\n    }\n  }\n\n  static resetAllCounts = () => {\n    MonoContext._counts = {};\n  }\n\n  static setState = <T extends MonoContextState>(newState: Partial<T>) => {\n    if (Object.keys(newState).includes('stateCreatedAt')) {\n      console.log(MonoContext._warningMessage.replace('PROPERTY', 'stateCreatedAt'));\n    }\n\n    if (Object.keys(newState).includes('stateUpdatedAt')) {\n      console.log(MonoContext._warningMessage.replace('PROPERTY', 'stateUpdatedAt'));\n    }\n\n    if (Object.keys(newState).includes('counts')) {\n      console.log(MonoContext._warningMessage.replace('PROPERTY', 'counts'));\n    }\n\n    const {\n      counts,\n      stateCreatedAt,\n      stateUpdatedAt,\n      ...safeNewState\n    } = newState;\n\n    if (Object.keys(safeNewState).length > 0) {\n      MonoContext._state = {\n        ...MonoContext._state,\n        ...safeNewState,\n      } as T;\n\n      MonoContext._stateUpdatedAt = new Date();\n    }\n\n    return MonoContext.getState();\n  };\n\n  static getState = <T extends MonoContextState>() => {\n    return MonoContext._state = {\n      ...MonoContext._state,\n      counts: { ...MonoContext._counts },\n      stateCreatedAt: MonoContext._stateCreatedAt,\n      stateUpdatedAt: MonoContext._stateUpdatedAt,\n    } as T;\n  };\n\n  static getStateValue = (key: string) => MonoContext._state[key];\n\n  static resetState = () => {\n    MonoContext._stateCreatedAt = new Date();\n    MonoContext._stateUpdatedAt = new Date();\n    MonoContext._state = {};\n  }\n\n  count = MonoContext.count;\n  getCount = MonoContext.getCount;\n  resetCount = MonoContext.resetCount;\n  resetAllCounts = MonoContext.resetAllCounts;\n  setState = MonoContext.setState;\n  getState = MonoContext.getState;\n  getStateValue = MonoContext.getStateValue;\n  resetState = MonoContext.resetState;\n\n  constructor(warningOff: boolean = false) {\n    if (!warningOff) {\n      console.log(\n        'WARNING: instantiating MonoContext is unnecessary, all methods are statically defined'\n      );\n    }\n\n    if (!MonoContext.instance) {\n      MonoContext.instance = this;\n      return this;\n    }\n\n    return MonoContext.instance;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;AAaA,2BAAiC;AAAA,IA4F/B,YAAY,aAAsB,OAAO;AATzC,mBAAQ,aAAY;AACpB,sBAAW,aAAY;AACvB,wBAAa,aAAY;AACzB,4BAAiB,aAAY;AAC7B,sBAAW,aAAY;AACvB,sBAAW,aAAY;AACvB,2BAAgB,aAAY;AAC5B,wBAAa,aAAY;AAGvB,UAAI,CAAC,YAAY;AACf,gBAAQ,IACN;AAAA;AAIJ,UAAI,CAAC,aAAY,UAAU;AACzB,qBAAY,WAAW;AACvB,eAAO;AAAA;AAGT,aAAO,aAAY;AAAA;AAAA;AAxGvB;AAGiB,EAHjB,YAGiB,kBAAwB,IAAI;AAC5B,EAJjB,YAIiB,kBAAwB,IAAI;AAC5B,EALjB,YAKiB,UAAiC;AACjC,EANjB,YAMiB,SAA6B;AAErC,EART,YAQS,UAAU;AAEV,EAVT,YAUS,kBAAkB;AAElB,EAZT,YAYS,QAAQ,CAAC,QAAwB;AACtC,QAAI,CAAC,aAAY,QAAQ,MAAM;AAC7B,mBAAY,QAAQ,OAAO;AAAA;AAG7B,iBAAY,QAAQ,QAAQ;AAE5B,WAAO,aAAY,QAAQ;AAAA;AAGtB,EAtBT,YAsBS,WAAW,CAAC,QAAwB,aAAY,QAAQ,QAAQ;AAEhE,EAxBT,YAwBS,aAAa,CAAC,QAAgB;AACnC,QAAI,aAAY,QAAQ,MAAM;AAC5B,mBAAY,QAAQ,OAAO;AAAA;AAAA;AAIxB,EA9BT,YA8BS,iBAAiB,MAAM;AAC5B,iBAAY,UAAU;AAAA;AAGjB,EAlCT,YAkCS,WAAW,CAA6B,aAAyB;AACtE,QAAI,OAAO,KAAK,UAAU,SAAS,mBAAmB;AACpD,cAAQ,IAAI,aAAY,gBAAgB,QAAQ,YAAY;AAAA;AAG9D,QAAI,OAAO,KAAK,UAAU,SAAS,mBAAmB;AACpD,cAAQ,IAAI,aAAY,gBAAgB,QAAQ,YAAY;AAAA;AAG9D,QAAI,OAAO,KAAK,UAAU,SAAS,WAAW;AAC5C,cAAQ,IAAI,aAAY,gBAAgB,QAAQ,YAAY;AAAA;AAG9D,UAKI,eAJF;AAAA;AAAA,MACA;AAAA,MACA;AAAA,QAEE,IADC,yBACD,IADC;AAAA,MAHH;AAAA,MACA;AAAA,MACA;AAAA;AAIF,QAAI,OAAO,KAAK,cAAc,SAAS,GAAG;AACxC,mBAAY,SAAS,kCAChB,aAAY,SACZ;AAGL,mBAAY,kBAAkB,IAAI;AAAA;AAGpC,WAAO,aAAY;AAAA;AAGd,EAlET,YAkES,WAAW,MAAkC;AAClD,WAAO,aAAY,SAAS,iCACvB,aAAY,SADW;AAAA,MAE1B,QAAQ,mBAAK,aAAY;AAAA,MACzB,gBAAgB,aAAY;AAAA,MAC5B,gBAAgB,aAAY;AAAA;AAAA;AAIzB,EA3ET,YA2ES,gBAAgB,CAAC,QAAgB,aAAY,OAAO;AAEpD,EA7ET,YA6ES,aAAa,MAAM;AACxB,iBAAY,kBAAkB,IAAI;AAClC,iBAAY,kBAAkB,IAAI;AAClC,iBAAY,SAAS;AAAA;",
  "names": []
}
